@page "/scheduler"
@inject Services.IVoteServcie voteService

<RadzenScheduler @ref=@scheduler SlotRender=@OnSlotRender TItem="Appointment" Data=@appointments StartProperty="Start" EndProperty="End"
                 TextProperty="Text" SelectedIndex="2"
                 AppointmentRender=@OnAppointmentRender>
    <RadzenDayView />
    <RadzenWeekView />
    <RadzenMonthView />
    <RadzenYearView />
</RadzenScheduler>

@if (vote != null)
{
    <RadzenCard>
        <RadzenLabel Text="Vote"></RadzenLabel>
        <RadzenCheckBoxList @bind-Value=@values AllowSelectAll="true" SelectAllText="Sao cũng đc" Orientation="Orientation.Vertical">
            <Items>
                <RadzenCheckBoxListItem Text="@x" Value="1" />
                <RadzenCheckBoxListItem Text="Employees" Value="2" />
                <RadzenCheckBoxListItem Text="Customers" Value="3" />
            </Items>
        </RadzenCheckBoxList>
    </RadzenCard>
}

<style>
    .rz-scheduler-nav-views {
        display: none;
    }
</style>

@code {
    IEnumerable<int> values = new int[] { };
    RadzenScheduler<Appointment>? scheduler;

    Document vote;

    IList<Appointment> appointments = new List<Appointment>();

    protected override async Task OnInitializedAsync()
    {
        vote = await voteService.GetVote(Global.Infomation);

        foreach (var choice in vote.Choices)
        {
            if (choice.Date != null)
            {
                var date = (DateTime)choice.Date;
                var appointment = new Appointment { Start = date, End = date.AddHours(1).AddMinutes(30), Text = "ĐÁ BÓNG" };
                appointments.Add(appointment);
            }
        }

        var x = appointments.Count();

        StateHasChanged();
    }

    void OnSlotRender(SchedulerSlotRenderEventArgs args)
    {
        // Highlight today in month view
        if (args.View.Text == "Month" && args.Start.Date == DateTime.Today)
        {
            args.Attributes["style"] = "background: rgba(255,220,40,.2);";
        }

        // Highlight working hours (9-18)
        if ((args.View.Text == "Week" || args.View.Text == "Day") && args.Start.Hour > 8 && args.Start.Hour < 19)
        {
            args.Attributes["style"] = "background: rgba(255,220,40,.2);";
        }
    }

    void OnAppointmentRender(SchedulerAppointmentRenderEventArgs<Appointment> args)
    {
        // Never call StateHasChanged in AppointmentRender - would lead to infinite loop

        if (args.Data.Text == "ĐÁ BÓNG")
        {
            args.Attributes["style"] = "background: red";
        }
    }
}