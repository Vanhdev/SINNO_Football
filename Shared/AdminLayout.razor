@inherits LayoutComponentBase

<RadzenDialog />
<RadzenNotification />
<RadzenTooltip />
<RadzenContextMenu />

<RadzenLayout>

    @if (loggedIn)
    {
        <RadzenHeader>
            <RadzenRow>
                <RadzenColumn>
                    <RadzenStack Orientation="Radzen.Orientation.Horizontal" Radzen.AlignItems="Radzen.AlignItems.Center" Gap="0">
                        <RadzenSidebarToggle Click="@(() => sidebarExpanded = !sidebarExpanded)" />
                    </RadzenStack>
                </RadzenColumn>
                <RadzenColumn>
                    <RadzenStack Orientation="Radzen.Orientation.Horizontal" JustifyContent="JustifyContent.End" Radzen.AlignItems="Radzen.AlignItems.Center" Gap="0">
                        <RadzenMenu>
                            <RadzenMenuItem Text="Admin" Icon="account_box">
                                <RadzenMenuItem Text="Logout" Path="/admin/logout" Icon="logout"></RadzenMenuItem>
                            </RadzenMenuItem>
                        </RadzenMenu>

                    </RadzenStack>
                </RadzenColumn>
            </RadzenRow>

        </RadzenHeader>
        <RadzenSidebar Responsive="false" Style="width: max-content">
            <RadzenPanelMenu Multiple="false" DisplayStyle="@(sidebarExpanded ? MenuItemDisplayStyle.IconAndText : MenuItemDisplayStyle.Icon)" ShowArrow="false">
                <RadzenPanelMenuItem Text="Home" Path="/admin" Icon="home" />
                <RadzenPanelMenuItem Text="Thành viên" Path="/admin/members" Icon="recent_actors" />
                <RadzenPanelMenuItem Text="Vote lịch" Icon="poll" Path="/admin/votes" />
            </RadzenPanelMenu>
        </RadzenSidebar>
    }
    <RadzenBody>
        <div class="rz-p-4">
            @Body
        </div>
    </RadzenBody>
</RadzenLayout>

@code {
    bool sidebarExpanded = true;
    string? authString;

    public bool loggedIn = false;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var auth = await sessionStorage.GetItemAsStringAsync("auth");
        if (auth != null)
        {
            authString = System.Text.Encoding.UTF8.GetString(Convert.FromBase64String(auth));
        }

        var admin = DB.Accounts.Find("sinnofc");
        var adminString = $"{admin.Username.ToMD5()}-{admin.Password.ToMD5()}";

        if (authString == adminString)
        {
            loggedIn = true;
        }

        StateHasChanged();
    }
}